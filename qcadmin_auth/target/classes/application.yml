server:
  port: 9002
  servlet:
    context-path: /auth
spring:
  application:
    name: qcadmin_auth
  datasource:
    druid:
      url: ${MYSQL_URL:jdbc:mysql://192.168.25.135/qcadmin_auth?characterEncoding=utf-8}
      username: root
      password: root
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
  jpa:
    database: MySQL
    show-sql: true
    generate-ddl: true
  redis:
    host: ${REDIS_HOST:192.168.25.135}
    port: ${REDIS_PORT:6379}
    timeout: 5000ms #连接超时 毫秒
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1ms #连接池最大等行时间 -1没有限制
#    password: xuecheng
eureka:
  client:
    service-url: # EurekaServer地址
      defaultZone: http://127.0.0.1:10001/eureka
  instance:
    prefer-ip-address: true # 当调用getHostname获取实例的hostname时，返回ip而不是host名称
    ip-address: 127.0.0.1 # 指定自己的ip信息，不指定的话会自己寻找
encrypt:
  key-store:
    location: classpath:/qcadmin.keystore
    secret: qcadmin
    alias: qckey
    password: qcadmin
  auth:
    tokenValiditySeconds: 1200  #token存储到redis的过期时间
    clientId: qcadmin
    clientSecret: qcadmin





#  cookieDomain: java.itcast.cn
#  cookieMaxAge: -1

#encrypt:
#  key-store:
#    location: classpath:/xc.keystore
#    secret: xuechengkeystore
#    alias: xckey


#
#eureka:
#  client:
#    registerWithEureka: true #服务注册开关
#    fetchRegistry: true #服务发现开关
#    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
#      defaultZone: ${EUREKA_SERVER:http://localhost:10001/eureka/,http://localhost:50102/eureka/}
#  instance:
#    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
#    ip-address: ${IP_ADDRESS:127.0.0.1}
#    instance-id: ${spring.application.name}:${server.port} #指定实例id
#ribbon:
#  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
#  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
#  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
#  ConnectTimeout: 5000  #请求连接的超时时间
#  ReadTimeout: 6000 #请求处理的超时时间





